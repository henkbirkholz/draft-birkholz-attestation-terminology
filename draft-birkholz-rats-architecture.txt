



RATS Working Group                                           H. Birkholz
Internet-Draft                                            Fraunhofer SIT
Intended status: Standards Track                              M. Wiseman
Expires: April 18, 2020                               GE Global Research
                                                           H. Tschofenig
                                                                ARM Ltd.
                                                                N. Smith
                                                                   Intel
                                                        October 16, 2019


               Remote Attestation Procedures Architecture
                draft-birkholz-rats-architecture-latest

Abstract

   Remote ATtestation procedureS enable the assessment of the
   trustworthiness (RATS) of remote peers in various usage scenarios.
   In order to support a resilient and vendor-interoperable solution
   ecosystem, the architecture module defined in this document enables a
   semantic mapping of existing remote attestation workflows, including
   solutions, such as Fast Identity Online (FIDO), Android Key
   Attestation (of the W3C Web Authentication), or Trusted Computing
   Group (TCG) Remote Integrity Verification (RIV).  The RATS
   architecture also provides a simple and unified basis to accommodate
   emerging solutions, such as the Device Identifier Composition Engine
   (DICE) or Time-based Uni-Directional Attestation (TUDA).  As a
   result, the RATS architectural model defined is composable,
   extensible & uses well-defined terminology.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 18, 2020.





Birkholz, et al.         Expires April 18, 2020                 [Page 1]

Internet-Draft              RATS Arch & Terms               October 2019


Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  RATS in a Nutshell  . . . . . . . . . . . . . . . . . . .   3
   2.  Essential Terms . . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  RATS Vocabulary . . . . . . . . . . . . . . . . . . . . .   4
     2.2.  Requirements Notation . . . . . . . . . . . . . . . . . .   6
   3.  Conceptual Overview . . . . . . . . . . . . . . . . . . . . .   7
     3.1.  Computing Environments  . . . . . . . . . . . . . . . . .   7
     3.2.  Trustworthiness . . . . . . . . . . . . . . . . . . . . .   8
     3.3.  RATS Workflow . . . . . . . . . . . . . . . . . . . . . .   9
     3.4.  Interoperability between RATS . . . . . . . . . . . . . .   9
   4.  RATS Architecture . . . . . . . . . . . . . . . . . . . . . .   9
     4.1.  Goals . . . . . . . . . . . . . . . . . . . . . . . . . .   9
     4.2.  Attestation Principles  . . . . . . . . . . . . . . . . .  10
     4.3.  RATS Roles and Messages . . . . . . . . . . . . . . . . .  11
       4.3.1.  Roles . . . . . . . . . . . . . . . . . . . . . . . .  11
       4.3.2.  Role Messages . . . . . . . . . . . . . . . . . . . .  12
     4.4.  RATS Principals . . . . . . . . . . . . . . . . . . . . .  13
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .  14
   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     6.1.  Normative References  . . . . . . . . . . . . . . . . . .  15
     6.2.  Informative References  . . . . . . . . . . . . . . . . .  15
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  16

1.  Introduction

   The long-standing Internet Threat Model [RFC3552] focuses on threats
   to the communication channel, as pioneered by Dolev and Yao
   [DOLEV-YAO] in 1983.  However, threats to the endpoint [RFC5209] and
   system components [RFC4949] of transited communication gear (i.e.
   hosts) are increasingly relevant for assessing the trustworthiness
   properties of a communication channel.  Beyond the collection and



Birkholz, et al.         Expires April 18, 2020                 [Page 2]

Internet-Draft              RATS Arch & Terms               October 2019


   conveyance of security posture [RFC5209] about an endpoint (host),
   remote attestation provides believable trustworthiness claims
   ("Evidence") about an endpoint (host).  In general, this document
   provides normative guidance how to use, create or adopt network
   protocols that facilitate RATS.

1.1.  RATS in a Nutshell

   The RATS architecture provides a basis to assess the trustworthiness
   of endpoints by other parties:

   o  In remote attestation workflows, trustworthiness Claims are
      accompanied by a proof of veracity.  Typically, this proof is a
      cryptographic expression such as a digital signature or message
      digest.  Trustworthiness Claims with proof is what makes
      attestation Evidence believable.

   o  A corresponding attestation provisioning workflow uses
      trustworthiness Claims to convey believable Endorsements and
      Known-Good-Values used by a Verifier to appraise Evidence.

   In the RATS architecture, specific content items are identified (and
   described in more detail below):

   o  Evidence is provable Claims about a specific Computing Environment
      made by an Attester.

   o  Known-Good-Values are reference Claims used to appraise Evidence.

   o  Endorsements are reference Claims about the environment protecting
      the Attesters capabilities to create believable Evidence (e.g. the
      type of protection for an attestation key).  It answers the
      question "why Evidence is believable".

   o  Attestation Results are the output from the appraisal of Evidence,
      Known-Good-Values and Endorsements.

   Attestation Results are the output of RATS.  Assessment of
   Attestation Results can be multi-faceted, but is out-of-scope for the
   RATS architecture.  If appropriate Endorsements about the Attester
   are available, Known-Good-Values about the Attester are available,
   and if the Attester is capable of creating believable Evidence - then
   the Verifier is able to create Attestation Results that enable
   Relying Parties to establish a level of confidence in the
   trustworthiness of the Attester.






Birkholz, et al.         Expires April 18, 2020                 [Page 3]

Internet-Draft              RATS Arch & Terms               October 2019


2.  Essential Terms

   The RATS vocabulary provides a concise definition of the terms used
   throughout the document.  More detailed descriptions of the terms
   defined (terminology) is included in later sections.  The
   relationship of terms in the glossary is illustrated by diagrams
   later in this section.  A definition in the vocabulary provided can
   use Forward References to other vocabulary definitions.

   Forward Reference:  Words that start with an upper case letter
      (although they would normally start with a lower case letter) are
      Forward References, which means that the definition will be found
      later in the same section the Forward Reference is found in.
      Forward References are only used in the RATS vocabulary that
      summarizes the essential terms used in this document.  The purpose
      of the vocabulary is to introduce essential terms and provide
      concise definitions at the beginning of the RATS architecture
      document, so there will be no further Forward References in the
      remainder of this document.

2.1.  RATS Vocabulary

   Appraisal:  The process of assessing Evidence with respect to its
      Message Properties and the Claims it contains by using
      Endorsements and Known-Good-Values.

   Architectural Constituents:  Entities, Roles, Messages, Message
      Properties, and potential Interactions defined by this
      architecture document.  Architectural Constituents are the
      components to define Profiles with.

   Asserter:  An Architectural Constituent.  An Asserter is the origin
      of Endorsements and Known-Good-Values.  The Role that designates
      an Entity that facilitates attestation provision workflows and
      potentially provides trust anchors.

   Attestation Result:  A Message type created by the Verifier Role and
      ultimately consumed by Relying Parties.

   Attester:  A Architectural Constituent.  The creator of Evidence.
      The Role that designates an Entity to be assessed with respect to
      its trustworthiness properties in the scope of a specific Profile.

   Attested:  The state of being scrutinized by monitoring
      trustworthiness properties or collecting Claims about the
      Environments of an Attester.





Birkholz, et al.         Expires April 18, 2020                 [Page 4]

Internet-Draft              RATS Arch & Terms               October 2019


   Attested Environment:  An Environment that is Attested and part of an
      Entity taking on the Role of Attester.

   Attesting:  The process of aggregating Claims and creating Evidence
      about Environments by an Attester.

   Attesting Environment:  An Environment capable of monitoring and
      Attesting target Environments of an Attester and reporting
      Evidence.

   Claims:  Statements about trustworthiness properties of an Attested
      Environment that are incorporated in Evidence, Known-Good-Values,
      or Endorsements.

   Conveyance:  The process of transferring Messages between Roles and
      Entities via a network protocols in a way that preserves required
      Message Properties.

   Endorsement:  A Message type created and distributed by the Asserter
      Role and consumed by the Verifier Role.  Endorsements provide
      Claims about Components of an Attester that an Attesting
      Environment cannot create Evidence about.

   Environment:  An Architectural Constituent.  A distinguishable
      computing context (typically composed of, e.g. memory, CPU,
      storage, networking, firmware, software) that is able to take one
      or more of Roles defined in this document.

   Entity:  An Architectural Constituent.  In the RATS context, this is
      a device, a component [RFC4949], or an Environment (see the
      tutorial on component in [RFC4949]).

   Evidence:  A Message type created and conveyed by the Attester Role.
      Attestation Evidence can be consumed and relayed by other Roles,
      primarily the Verifier Role to appraise the Evidence.

   Known-Good-Values:  A Message type created and distributed by the
      Asserter Role and consumed by the Verifier Role.  Known-Good-
      Values are reference Claims that are used to appraise the
      believability and veracity of attestation Evidence.

   Message:  An Architectural Constituent.  The serialized and protected
      information conveyed via network protocols.  Messages are created
      and consumed by Entities taking on one or more Roles.

   Message Properties:  A set of Architectural Constituents.  Message
      Properties are specific security aspects that pertain to the




Birkholz, et al.         Expires April 18, 2020                 [Page 5]

Internet-Draft              RATS Arch & Terms               October 2019


      Messages defined in this document: Freshness, Identity, Context,
      Provenance, Validity, Relevance, Veracity.

   Profile:  Either (1) a named set of constraints to the base RATS
      architectural model (subset) or, (2) more identified base
      specification (specialization).

      A Profile in the RATS context includes the identification of any
      required subsets of Architectural Constituents, semantic
      interpretations, or terminology, necessary to accomplish a
      particular remote attestation procedure usage scenario.  Profiles
      aim to increase interoperability within a community of users by
      introducing certain constraints on the use of the more general
      RATS architecture.

   Relying Party:  An Architectural Constituent.  The consumer or proxy
      of Attestation Results.  The Role that designates an Entity that
      requires reliable and believable statements about the
      Trustworthiness of an Attester Role.

   Role:  An Architectural Constituent.  The basic components of the
      architecture defined in this document that can be composed in
      several ways to create Profiles (i.e. specific Role compositions
      that enable

   Trustworthiness:  A essential expectation about an Entity that it
      will behave in a way that is intended and nothing more.  The
      definition of Trustworthiness is a derived and simplified
      definition based on "Trusted System" [RFC4949] excluding, for
      example, "environmental disruption".

   Verifier:  An Architectural Constituent.  The consumer of Evidence
      for appraisal.  The Role that designates an Entity to create
      Attestation Results based on Evidence, Known-Good-Values, and
      Endorsements.

2.2.  Requirements Notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.








Birkholz, et al.         Expires April 18, 2020                 [Page 6]

Internet-Draft              RATS Arch & Terms               October 2019


3.  Conceptual Overview

   In network protocol exchanges, it is often the case that one entity
   (a Relying Party) requires an assessment of the trustworthiness of a
   remote entity (an Attester or specific system components [RFC4949]
   thereof).  Remote ATtestation procedureS (RATS) enable Relying
   Parties to establish a level of confidence in the trustworthiness of
   remote system components through the creation of attestation evidence
   by remote system components and a processing chain of architectural
   constituents towards the relying party.

   The corresponding trustworthiness attributes processed may not be
   just a finite set of values.  Additionally, the system
   characteristics of remote components themselves have an impact on the
   veracity of trustworthiness attributes included in Evidence.
   Attester environments can vary widely ranging from those highly
   resistant to attacks to those having little or no resistance to
   attacks.  Configuration options, if set poorly, can result in a
   highly resistant environment being operationally less resistant.
   Computing Environments are often malleable being constructed from re-
   programmable hardware, firmware, software and updatable memory.  When
   a trustworthy environment changes, the question has to be asked
   whether the change transitioned the environment from a trustworthy
   state to an untrustworthy state.  The RATS architecture provides a
   framework for anticipating when a relevant change with respect to a
   trustworthiness attribute occurs, what changed and how relevant it
   is.  A remote attestation framework also creates a context for
   enabling an appropriate response by applications, system software and
   protocol endpoints when changes to trustworthiness attributes do
   occur.

3.1.  Computing Environments

   In the RATS context, a Claim is a specific trustworthiness attribute
   that pertains to a particular Computing Environment of an Attester.
   The set of possible Claims is expected to follow the possible
   computing environments that support attestation.  In other words,
   identical (i.e. same type, model, versions, components and
   composition) Attesting Computing Environments can create different
   Claim values that still compose valid Evidence due to different
   computing contexts.  Exemplary Claims include flight vectors or
   learned configuration.

   Likely, there are a set of Claims that is widely applicable across
   most, if not all environments.  Conversely, there are Claims that are
   unique to specific environments.  Consequently, the RATS architecture
   incorporates extensible mechanisms for representing Claims.




Birkholz, et al.         Expires April 18, 2020                 [Page 7]

Internet-Draft              RATS Arch & Terms               October 2019


   Computing Environments can be complex structurally.  In general,
   every Attester consists of multiple components (e.g. memory, CPU,
   storage, networking, firmware, software).  Components are
   computational elements that can be linked and composed to form
   computational pipelines, arrays and networks (e.g. a BIOS, a
   bootloader, or a trusted execution environment).

   An Attester includes at least one Computing Environment that is able
   to create attestation Evidence (the Attesting Computing Environment)
   about other Computing Environments (the Attested Computing
   Environments).  Not every computational element of an Attester is
   expected to be a Computing Environment capable of remote attestation.
   Analogously, remote attestation capable Computing Environments may
   not be capable of attesting to (creating evidence about) every
   computational element that interacts with the Computing Environment.
   A Computing Environment with an attestation capability can only be
   endorsed by an external entity and cannot create believable evidence
   about itself by its own.

   A Computing Environment with the capability of remote attestation:

   o  is separate from other Attested Computing Environments (about
      which attestation evidence is created), and

   o  is enabling the role of an Attester in the RATS architecture.

   A Computing Environment with the capability of remote attestation and
   taking on the role of an Attester has the following duties in order
   to create Evidence:

   o  monitoring trustworthiness attributes of other Computing
      Environments,

   o  collecting trustworthiness attributes and create Claims about
      them,

   o  serialize Claims using interoperable representations,

   o  provide integrity protection for the sets of Claims, and

   o  add appropriate attestation provenance attributes about the sets
      of Claims.

3.2.  Trustworthiness

   The trustworthiness of remote attestation capabilities is also a
   consideration for the RATS architecture.  It should be possible to
   understand the trustworthiness properties of the remote attestation



Birkholz, et al.         Expires April 18, 2020                 [Page 8]

Internet-Draft              RATS Arch & Terms               October 2019


   capability for any set of claims of a remote attestation flow via
   verification operations.  The RATS architecture anticipates recursive
   trustworthiness properties and the need for termination.  Ultimately,
   a portion of a computing environment's trustworthiness is established
   via non-automated means.  For example, design reviews, manufacturing
   process audits and physical security.  For this reason, trustworthy
   RATS depend on trustworthy manufacturing and supply chain practices.

3.3.  RATS Workflow

   The basic function of RATS is creation, conveyance and appraisal of
   attestation Evidence.  An Attester creates attestation Evidence that
   are conveyed to a Verifier for appraisal.  The appraisals compare
   Evidence with expected Known-Good-Values called obtained from
   Asserters (e.g.  Principals that are Supply Chain Entities).  There
   can be multiple forms of appraisal (e.g., software integrity
   verification, device composition and configuration verification,
   device identity and provenance verification).  Attestation Results
   are the output of appraisals.  Attestation Results are signed and
   conveyed to Relying Parties.  Attestation Results provide the basis
   by which the Relying Party may determine a level of confidence to
   place in the application data or operations that follow.

   RATS architecture defines attestation Roles (i.e., Attester,
   Verifier, Asserter and Relying Party), the messages they exchange,
   their structure and the various legal ways in which Roles may be
   hosted, combined and divided (see Principals below).  RATS messages
   are defined by an information model that defines Claims, environment
   and protocol semantics.  Information Model representations are
   realized as data structure and conveyance protocol binding
   specifications.

3.4.  Interoperability between RATS

   The RATS architecture anticipates use of information modeling
   techniques that describe computing environment structures - their
   components/computational elements and corresponding capabilities - so
   that verification operations may rely on the information model as an
   interoperable way to navigate the structural complexity.

4.  RATS Architecture

4.1.  Goals

   RATS architecture has the following goals:






Birkholz, et al.         Expires April 18, 2020                 [Page 9]

Internet-Draft              RATS Arch & Terms               October 2019


   o  Enable semantic interoperability of attestation semantics through
      information models about computing environments and
      trustworthiness.

   o  Enable data structure interoperability related to claims, endpoint
      composition / structure, and end-to-end integrity and
      confidentiality protection mechanisms.

   o  Enable programmatic assessment of trustworthiness.  (Note:
      Mechanisms that manage risk, justify a level of confidence, or
      determine a consequence of an attestation result are out of
      scope).

   o  Provide the building blocks, including Roles and Principals that
      enable the composition of service-chains/hierarchies and workflows
      that can create and appraise evidence about the trustworthiness of
      devices and services.

   o  Use-case driven architecture and design (RATS use cases are
      summarized in [I-D.richardson-rats-usecases]).

   o  Terminology conventions that are consistently applied across RATS
      specifications.

   o  Reinforce trusted computing principles that include attestation.

4.2.  Attestation Principles

   Specifications developed by the RATS working group apply the
   following principles:

   o  Freshness - replay of previously asserted Claims about an Attested
      Computing Environment can be detected.

   o  Identity - the Attesting Computing Environment is identifiable
      (non-anonymous).

   o  Context - the Attested Computing Environment is well-defined
      (unambiguous).

   o  Provenance - the origin of Claims with respect to the Attested and
      Attesting Computing Environments are known.

   o  Validity - the expected lifetime of Claims about an Attested
      Computing Environment is known.

   o  Relevance - the Claims associated with the Attested Computing
      Environment pertain to trustworthiness metrics.



Birkholz, et al.         Expires April 18, 2020                [Page 10]

Internet-Draft              RATS Arch & Terms               October 2019


   o  Veracity - the believability (level of confidence) of Claims is
      based on verifiable proofs.

4.3.  RATS Roles and Messages

   The RATS Roles (roles) are performed by RATS Principals.

   The RATS Architecture provides the building blocks to compose various
   RATS roles by leveraging existing and new protocols.  It defines
   architecture for composing RATS roles with principals and models
   their interactions.

   Figure Figure 1 provides an overview of the relationships between
   RATS Roles and the messages they exchange.

       +----------------+                     +-----------------+
       |                |  Known-Good-Values  |                 |
       |   Asserter(s)  |-------------------->|    Verifier     |
       |                |  Endorsements   /-->|                 |
       +----------------+                 |   +-----------------+
                                          |            |
                                          |            |
                                          |            |
                                          |            |Attestation
                                          |            |Results
                                          |            |
                                          |            |
                                          |            v
       +----------------+                 |   +-----------------+
       |                |    Evidence     |   |                 |
       |    Attester    |-----------------/   |  Relying Party  |
       |                |                     |                 |
       +----------------+                     +-----------------+


                           Figure 1: RATS Roles

4.3.1.  Roles

   RATS roles are implemented by principals that possess cryptographic
   keys used to protect and authenticate Claims or Results.

   Attester:  An Attestation Function that creates Evidence by
      collecting, formatting and protecting (e.g., signing) Claims.  It
      presents Evidence to a Verifier using a conveyance mechanism or
      protocol.





Birkholz, et al.         Expires April 18, 2020                [Page 11]

Internet-Draft              RATS Arch & Terms               October 2019


   Verifier:  An Attestation Function that accepts Evidence from an
      Attester using a conveyance mechanism or protocol.  It also
      accepts Known-Good-Values and Endorsements from an Asserter using
      a conveyance mechanism or protocol.  It verifies the protection
      mechanisms, parses and appraises Evidence according to good-known
      valid (or known-invalid) Claims and Endorsements.  It produces
      Attestation Results that are formatted and protected (e.g.,
      signed).  It presents Attestation Results to a Relying Party using
      a conveyance mechanism or protocol.

   Asserter:  An Attestation Function that generates reference Claims
      about both the Attesting Computing Environment and the Attested
      Computing Environment.  The manufacturing and development
      processes are presumed to be trustworthy processes.  In other
      words the Asserter is presumed, by a Verifier, to produce valid
      Claims.  The function collects, formats and protects (e.g. signs)
      valid Claims known as Endorsements and Known-Good-Values.  It
      presents provable Claims to a Verifier using a conveyance
      mechanism or protocol.

   Relying Party:  An Attestation Function that accepts Attestation
      Results from a Verifier using a conveyance mechanism or protocol.
      It assesses Attestation Results protections, parses and assesses
      Attestation Results according to an assessent context (Note:
      definition of the assessment context is out-of-scope).

4.3.2.  Role Messages

   Claims:  Statements about trustworthiness characteristics of an
      Attested Computing Environment.

      The veracity of a Claim is determined by the reputation of the
      entity making the Claim.  (Note: Reputation may involve
      identifying, authenticating and tracking transactions associated
      with an entity.  RATS may be used to establish entity reputation,
      but not exclusively.  Other reputation mechanisms are out-of-
      scope).

   Evidence:  Claims that are formatted and protected by an Attester.

      Evidence SHOULD satisfy Verifier expectations for freshness,
      identity, context, provenance, validity, relevance and veracity.

   Known-Good-Values:  Claims about the Attested Computing Environment.
      Typically, KGV Claims are message digests of firmware, software or
      configuration data supplied by various vendors.  If an Attesting
      Computing Environment implements cryptography, they include Claims
      about key material.



Birkholz, et al.         Expires April 18, 2020                [Page 12]

Internet-Draft              RATS Arch & Terms               October 2019


      Like Claims, Known-Good-Values SHOULD satisfy a Verifier's
      expectations for freshness, identity, context, provenance,
      validity, relevance and veracity.  Known-Good-Values are reference
      Claims that are - like Evidence - well formatted and protected
      (e.g. signed).

   Endorsements:  Claims about immutable and implicit characteristics of
      the Attesting Computing Environment.  Typically, endorsement
      Claims are created by manufacturing or supply chain entities.

      Endorsements are intended to increase the level of confidence with
      respect to Evidence created by an Attester.

   Attestation Results:  Statements about the output of an appraisal of
      Evidence that are created, formatted and protected by a Verifier.

      Attestation Results provide the basis for a Relying Party to
      establish a level of confidence in the trustworthiness of an
      Attester.  Attestation Results SHOULD satisfy Relying Party
      expectations for freshness, identity, context, provenance,
      validity, relevance and veracity.

4.4.  RATS Principals

   RATS Principals are entities, users, organizations, devices and
   computing environments (e.g., devices, platforms, services,
   peripherals).

   RATS Principals may implement one or more RATS Roles.  Role
   interactions occurring within the same RATS Principal are out-of-
   scope.

   The methods whereby RATS Principals may be identified, discovered,
   authenticated, connected and trusted, though important, are out-of-
   scope.

   Principal operations that apply resiliency, scaling, load balancing
   or replication are generally believed to be out-of-scope.













Birkholz, et al.         Expires April 18, 2020                [Page 13]

Internet-Draft              RATS Arch & Terms               October 2019


                +------------------+   +------------------+
                |  Principal 1     |   |  Principal 2     |
                |  +------------+  |   |  +------------+  |
                |  |            |  |   |  |            |  |
                |  |    Role 1  |<-|---|->|    Role 2  |  |
                |  |            |  |   |  |            |  |
                |  +------------+  |   |  +------------+  |
                |                  |   |                  |
                |  +-----+------+  |   |  +-----+------+  |
                |  |            |  |   |  |            |  |
                |  |    Role 2  |<-|---|->|    Role 3  |  |
                |  |            |  |   |  |            |  |
                |  +------------+  |   |  +------------+  |
                |                  |   |                  |
                +------------------+   +------------------+

                Figure 2: RATS Principals-Role Composition

   RATS Principals have the following properties:

   o  Multiplicity - Multiple instances of RATS Principals that possess
      the same RATS Roles can exist.

   o  Composition - RATS Principals possessing different RATS Roles can
      be combined into a singleton RATS Principal possessing the union
      of RATS Roles.  RATS Interactions between combined RATS Principals
      is uninteresting.

   o  Decomposition - A singleton RATS Principal possessing multiple
      RATS Roles can be divided into multiple RATS Principals.

   RATS Interactions may occur between them.

5.  Security Considerations

   RATS Evidence, Verifiable Assertions and Results SHOULD use formats
   that support end-to-end integrity protection and MAY support end-to-
   end confidentiality protection.  Replay attack prevention MAY be
   supported if a Nonce Claim is included.  Nonce Claims often piggy-
   back other information and can convey attestation semantics that are
   of essence to RATS, e.g. the last four bytes of a challenge nonce
   could be replaced by the IPv4 address-value of the Attester in its
   response.

   All other attacks involving RATS structures are not explicitly
   addressed by RATS architecture.  Additional security protections MAY
   be required of conveyance mechanisms.  For example, additional means
   of authentication, confidentiality, integrity, replay, denial of



Birkholz, et al.         Expires April 18, 2020                [Page 14]

Internet-Draft              RATS Arch & Terms               October 2019


   service and privacy protection of RATS payloads and Principals may be
   needed.

6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

6.2.  Informative References

   [ABLP]     Abadi, M., Burrows, M., Lampson, B., and G. Plotkin, "A
              Calculus for Access Control in Distributed Systems",
              Springer Annual International Cryptology Conference,
              page 1-23, DOI 10.1.1.36.691, 1991.

   [DOLEV-YAO]
              Dolev, D. and A. Yao, "On the security of public key
              protocols", IEEE Transactions on Information Theory Vol.
              29, pp. 198-208, DOI 10.1109/tit.1983.1056650, March 1983.

   [I-D.richardson-rats-usecases]
              Richardson, M., Wallace, C., and W. Pan, "Use cases for
              Remote Attestation common encodings", draft-richardson-
              rats-usecases-05 (work in progress), October 2019.

   [Lampson2007]
              Lampson, B., "Practical Principles for Computer Security",
              IOSPress Proceedings of Software System Reliability and
              Security, page 151-195, DOI 10.1.1.63.5360, 2007.

   [RFC3552]  Rescorla, E. and B. Korver, "Guidelines for Writing RFC
              Text on Security Considerations", BCP 72, RFC 3552,
              DOI 10.17487/RFC3552, July 2003,
              <https://www.rfc-editor.org/info/rfc3552>.

   [RFC4949]  Shirey, R., "Internet Security Glossary, Version 2",
              FYI 36, RFC 4949, DOI 10.17487/RFC4949, August 2007,
              <https://www.rfc-editor.org/info/rfc4949>.





Birkholz, et al.         Expires April 18, 2020                [Page 15]

Internet-Draft              RATS Arch & Terms               October 2019


   [RFC5209]  Sangster, P., Khosravi, H., Mani, M., Narayan, K., and J.
              Tardo, "Network Endpoint Assessment (NEA): Overview and
              Requirements", RFC 5209, DOI 10.17487/RFC5209, June 2008,
              <https://www.rfc-editor.org/info/rfc5209>.

Authors' Addresses

   Henk Birkholz
   Fraunhofer SIT
   Rheinstrasse 75
   Darmstadt  64295
   Germany

   Email: henk.birkholz@sit.fraunhofer.de


   Monty Wiseman
   GE Global Research
   USA

   Email: monty.wiseman@ge.com


   Hannes Tschofenig
   ARM Ltd.
   110 Fulbourn Rd
   Cambridge  CB1 9NJ
   UK

   Email: hannes.tschofenig@gmx.net


   Ned Smith
   Intel Corporation
   USA

   Email: ned.smith@intel.com














Birkholz, et al.         Expires April 18, 2020                [Page 16]
